name: Docker Image CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Dry_Run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this Repository and SSGA Submodule
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Install modules (test requirements file)
        run: pip3 install -r requirements.txt

      - name: Compile and move SSGA executable
        run: cd SemanticAnalyzer && make && mv ssga ..

      - name: Dry run (run, check args and exit)
        run: python3 main.py --tcp --dry-run

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this Repository and SSGA Submodule
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Install Python modules
        run: pip3 install -r requirements.txt

      - name: Run Python Unit Tests
        run: pytest .

  Build_Image:
    needs: [Dry_Run, Test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this Repository and SSGA Submodule
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Build the Docker image
        run: docker build --tag dns-deployment .

      - name: Create and run docker container from image
        run: docker run -d -p 127.0.0.1:80:80 -p 127.0.0.1:53:53/tcp -p 127.0.0.1:53:53/udp dns-deployment

  Publish:
    if: github.ref == 'refs/heads/main'
    needs: Build_Image
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ secrets.REPOSITORY_USERNAME }}
      PASSWORD: ${{ secrets.REPOSITORY_PASSWORD }}
      REPOSITORY: ${{ secrets.REPOSITORY_URL }}

    steps:
      - name: Checkout this Repository and SSGA Submodule
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: recursive

      - name: Build the Docker image for pushing
        run: docker build --tag dns-deployment .

      - name: Login to repository
        run: docker login --username "$USERNAME" --password "$PASSWORD" "$REPOSITORY"

      - name: Tag with remote repository
        run: docker tag dns-deployment "$REPOSITORY/dns-deployment"

      - name: Push to remote repository
        run: docker push "$REPOSITORY/dns-deployment"
